Index: src/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.sql.SQLOutput;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\n\r\n\r\npublic class Menu\r\n{\r\n    //=================================== ATTRIBUTI ===================================//\r\n\r\n    //creo ma non inizializzo il mio arraylist di utenti\r\n    private ArrayList<Utente> listaUtenti;\r\n\r\n    //=================================== COSTRUTTORE DI DEFAULT ===================================//\r\n    public  Menu()\r\n    {\r\n        //inizializzo un arraylist di tipo Utente perchè inserirò una lista di utenti\r\n        this.listaUtenti = new ArrayList<Utente>();\r\n\r\n        //inizializzo un utente di prova che poi inserisco nel mio arraylist\r\n        Utente utenteProva = new  Utente (\"pippo\", \"123\", 500.00);\r\n\r\n        //aggiungio un utente di prova dentro il mio arraylist\r\n        listaUtenti.add(utenteProva);\r\n        loginRegistrazioni();\r\n    }\r\n    //creazione del menu\r\n    public void loginRegistrazioni()\r\n    {\r\n\r\n        boolean controlloDiRitorno = false;\r\n        while(true)\r\n        {\r\n            System.out.println(\"Sei già registrato [S/N]\");\r\n\r\n            Scanner inserimento = new Scanner(System.in);\r\n            String sceltaSN = inserimento.nextLine();\r\n\r\n\r\n            if(sceltaSN.equalsIgnoreCase(\"s\"))\r\n            {\r\n                while(controlloDiRitorno==false)\r\n                {\r\n                    System.out.println(\"Inserisci nome e password\");\r\n\r\n                    Scanner inserimentoCredenziali = new Scanner(System.in);\r\n                    String inserisciNome = inserimentoCredenziali.nextLine();\r\n                    String inserisciPsw =  inserimentoCredenziali.nextLine();\r\n\r\n                    //controllo che la funzione passata dalla classe Utente restituisca effettivamente true perchè il login vada a buon fine\r\n                    if(Utente.login(inserisciNome, inserisciPsw, listaUtenti) == true)\r\n                    {\r\n                        System.out.println(\"LOGIN EFFETTUATO CON SUCCESSO\");\r\n                        controlloDiRitorno=true;\r\n                        //richiamo la funzione saldo per farmi stampare il saldo attuale dell'utente (inserito al momento della registrazione nella classe Utente)\r\n                        stampaSaldo(inserisciNome);\r\n                    }\r\n                    else\r\n                    {\r\n                        System.out.println(\"DATI NON VALIDI\");\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (sceltaSN.equalsIgnoreCase(\"n\"))\r\n            {\r\n                //registrazione\r\n                while(controlloDiRitorno==false)\r\n                {\r\n                    Scanner inserimentoCredenziali = new Scanner(System.in);\r\n                    System.out.println(\"Inserisci nome:\");\r\n                    String inserisciNome = inserimentoCredenziali.nextLine();\r\n\r\n                    System.out.println(\"Inserisci password:\");\r\n                    String inserisciPsw =  inserimentoCredenziali.nextLine();\r\n\r\n                    System.out.println(\"Inserisci saldo:\");\r\n                    double inserisciSaldo = inserimentoCredenziali.nextDouble();\r\n\r\n                    //controllo che la funzione passata dalla classe Utente restituisca effettivamente true perchè la registrazione vada a buon fine\r\n                    if(Utente.registrazione(inserisciNome, inserisciPsw, inserisciSaldo, listaUtenti) == true)\r\n                    {\r\n                        System.out.println(\"REGISTRAZIONE EFFETTUATA\");\r\n                        controlloDiRitorno=true;\r\n\r\n                        stampaSaldo(inserisciNome);\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        System.out.println(\"UTENTE GIÀ ESISTENTE, REINSERISCI CREDENZIALI:\");\r\n                    }\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                System.out.println( \"SCELTA NON ESISTENTE\");\r\n            }\r\n            break;\r\n        }\r\n\r\n    }\r\n    public void stampaSaldo(String inserisciNome)\r\n    {\r\n        //lau mi restitusisce la funzione saldo ed io gli passo il nome affinchè lui mi restituisca il saldo corrispondente all'utente giusto\r\n        Utente ute = new Utente(\"\",\"\",0.0);\r\n        System.out.println(\"Il tuo saldo è:\" + ute.mostraSaldo(inserisciNome, listaUtenti));\r\n        stampaMenu(inserisciNome);\r\n\r\n\r\n    }\r\n    public void stampaMenu(String inserisciNome)\r\n    {\r\n        Scanner scelta = new Scanner(System.in);\r\n        boolean controlloMenu=false;\r\n        //Utente ute = new Utente(\"\",\"\",0.0);\r\n        while(controlloMenu==false)\r\n        {\r\n            System.out.println(\"-----MENU-----\");\r\n            System.out.println(\"Cosa vuoi fare?\");\r\n            System.out.println(\"A: Inserisci le tue entrate\");\r\n            System.out.println(\"B: Inserisci le tue uscite\");\r\n            System.out.println(\"C: Esci\");\r\n\r\n\r\n            String sceltaOpzioni = scelta.nextLine();\r\n\r\n            if (sceltaOpzioni.equalsIgnoreCase(\"a\"))\r\n            {\r\n                System.out.println(\"Inserisci entrate:\");\r\n                Scanner inserimentoEntrate = new Scanner(System.in);\r\n                double quantita = inserimentoEntrate.nextDouble();\r\n                String note = inserimentoEntrate.nextLine();\r\n\r\n                //richiamo funzione inserimentoEntrate lau\r\n                System.out.println(\"Adesso il saldo attuale è:\" + Utente.inserimentoEntrate(inserisciNome, listaUtenti, true, quantita, note));\r\n\r\n            }\r\n            else if (sceltaOpzioni.equalsIgnoreCase(\"b\"))\r\n            {\r\n                System.out.println(\"Inscerisci le uscite:\");\r\n                Scanner inserimentoUscite = new Scanner(System.in);\r\n                double quantita = inserimentoUscite.nextDouble();\r\n                String note = inserimentoUscite.nextLine();\r\n                //richiamo funzione inserimentoUsciote lau\r\n                System.out.println(\"Adesso il saldo attuale è:\" + Utente.inserimentoEntrate(inserisciNome, listaUtenti, false, quantita, note));\r\n            }\r\n\r\n            else if (sceltaOpzioni.equalsIgnoreCase(\"c\"))\r\n            {\r\n                System.out.println(\"Log Out effettuato!\");\r\n                controlloMenu=true;\r\n\r\n            }\r\n            else\r\n            {\r\n                System.out.println(\"SCELTA ERRATA!\");\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Menu.java b/src/Menu.java
--- a/src/Menu.java	(revision 0a80c248d2c8f6f2961d6e80e69279b174cb9a9c)
+++ b/src/Menu.java	(date 1696067742147)
@@ -52,6 +52,7 @@
                     {
                         System.out.println("LOGIN EFFETTUATO CON SUCCESSO");
                         controlloDiRitorno=true;
+
                         //richiamo la funzione saldo per farmi stampare il saldo attuale dell'utente (inserito al momento della registrazione nella classe Utente)
                         stampaSaldo(inserisciNome);
                     }
Index: src/Utente.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\n\r\n/*                          CLASSE UTENTE\r\n*   ATTRIBUTI:\r\n*       - nome\r\n*       - passoword\r\n*       - saldo\r\n*       - movimenti\r\n*\r\n*   FUNZIONI:\r\n*       - login\r\n*       - registrazione\r\n*\r\n*\r\n*/\r\npublic class Utente\r\n{\r\n\r\n    //=================================== ATTRIBUTI ===================================//\r\n    private String nome;\r\n    private String password;\r\n    private Double saldo;\r\n    private static ArrayList<Movimento> movimenti;             //creo ma non inizializzo il mio arraylist di movimenti\r\n\r\n    //=================================== COSTRUTTORE DI DEFAULT ===================================//\r\n    public Utente(String nome, String password , Double saldo)\r\n    {\r\n        this.nome=nome;\r\n        this.password=password;\r\n        this.saldo=saldo;\r\n        this.movimenti = new ArrayList<Movimento>();    //inizializzo un arraylist di movimenti vuoto\r\n    }\r\n\r\n    //=================================== FUNZIONE LOGIN ===================================//\r\n    //prendo in input i valori nome, passw e la lista di utenti e cerco nell'arrayList se trovo un utente corrispondente\r\n    //quindi do in output true se trovo questa corrispondenza, false altrimenti\r\n\r\n    public static Boolean login(String nomeInserito,String passwordInserita, ArrayList<Utente> listaUtenti)\r\n    {\r\n        for (int i = 0; i <listaUtenti.size(); i++)\r\n        {\r\n            if(nomeInserito.equals(listaUtenti.get(i).nome) && passwordInserita.equals(listaUtenti.get(i).password))\r\n            {\r\n                return true;        //trovato\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    //=================================== FUNZIONE REGISTRAZIONE ===================================//\r\n    //se la registrazione va a buon fine aggiorno l'arraylist, divestamente restituisco false e non va a buon fine\r\n    public static Boolean registrazione(String nomeInserito,String passwordInserito,Double saldoInserito,ArrayList<Utente> listaUtenti)\r\n    {\r\n        for (int i = 0; i < listaUtenti.size() ; i++)\r\n        {\r\n            if(nomeInserito.equals(listaUtenti.get(i).nome))\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        //quindi se non trova un untente uguale, quindi già registrato può aggiungerlo e registralo all array\r\n        Utente nuovoUtente = new Utente(nomeInserito, passwordInserito,saldoInserito);\r\n        listaUtenti.add(nuovoUtente);\r\n        return true;\r\n    }\r\n    //=================================== FUNZIONE MOSTRA SALDO ===================================//\r\n    public static String mostraSaldo(String nomeInserito, ArrayList<Utente> listaUtenti)\r\n    {\r\n        for (int i = 0; i < listaUtenti.size(); i++)\r\n        {\r\n                if (nomeInserito.equals(listaUtenti.get(i).nome))\r\n                {\r\n                    return listaUtenti.get(i).saldo.toString();\r\n                }\r\n        }\r\n        return \"ERRORE, utente non trovato nella funzione mostra saldo\";\r\n    }\r\n\r\n    //=================================== FUNZIONE INSERIMENTO ENTRATE ===================================//\r\n    public static String inserimentoEntrate(String nomeInserito, ArrayList<Utente> listaUtenti, Boolean tipoMovimento, Double quantita ,String note)\r\n    {\r\n        for (int i = 0; i < listaUtenti.size(); i++)\r\n        {\r\n            if(nomeInserito.equals(listaUtenti.get(i).nome))\r\n            {\r\n                Movimento movimentoTemp = new Movimento();\r\n                //entrata\r\n                if(tipoMovimento== true)\r\n                {\r\n                    //compongo annucio\r\n                    movimentoTemp.setTipoMovimento(true);\r\n                    movimentoTemp.setQuantita(quantita);\r\n                    movimentoTemp.setNote(note);\r\n                    movimenti.add(movimentoTemp);\r\n\r\n                    //devo aggiungere questa somma di quanita al saldo e poi restituire il saldo in stringa\r\n                    listaUtenti.get(i).setSaldo(listaUtenti.get(i).saldo+quantita);\r\n                    return listaUtenti.get(i).getSaldo().toString();\r\n                }\r\n                //ucita\r\n                else\r\n                {\r\n                    //compongo annucio\r\n                    movimentoTemp.setTipoMovimento(false);\r\n                    movimentoTemp.setQuantita(quantita);\r\n                    movimentoTemp.setNote(note);\r\n                    movimenti.add(movimentoTemp);\r\n                    //devo sottrarre questa somma di quanita al saldo e poi restituire il saldo in stringa\r\n                    listaUtenti.get(i).setSaldo(listaUtenti.get(i).saldo-quantita);\r\n                    return listaUtenti.get(i).getSaldo().toString();\r\n                }\r\n            }\r\n        }\r\n        return \"ERRORE, utente non trovato in inserimentoEntrate\";\r\n    }\r\n    //=================================== GETTER ===================================//\r\n    public String getNome()\r\n    {\r\n        return nome;\r\n    }\r\n    public String getPassword()\r\n    {\r\n        return password;\r\n    }\r\n    public Double getSaldo()\r\n    {\r\n        return saldo;\r\n    }\r\n    public ArrayList<Movimento> getMovimenti()\r\n    {\r\n        return movimenti;\r\n    }\r\n\r\n    //=================================== SETTER ===================================//\r\n    public void setNome(String nome) {\r\n        this.nome = nome;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public void setSaldo(Double saldo) {\r\n        this.saldo = saldo;\r\n    }\r\n\r\n    public void setMovimenti(ArrayList<Movimento> movimenti) {\r\n        this.movimenti = movimenti;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Utente.java b/src/Utente.java
--- a/src/Utente.java	(revision 0a80c248d2c8f6f2961d6e80e69279b174cb9a9c)
+++ b/src/Utente.java	(date 1696067742131)
@@ -104,6 +104,7 @@
                     movimentoTemp.setQuantita(quantita);
                     movimentoTemp.setNote(note);
                     movimenti.add(movimentoTemp);
+
                     //devo sottrarre questa somma di quanita al saldo e poi restituire il saldo in stringa
                     listaUtenti.get(i).setSaldo(listaUtenti.get(i).saldo-quantita);
                     return listaUtenti.get(i).getSaldo().toString();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"eeef6f22-1d11-45f2-b00d-9be0cbd50e56\" name=\"Changes\" comment=\"creazione funzione stampaSaldo per stampare il saldo di un utente, collegata alla funzione mostraSaldo di lau (la mia serve solo per richiamare, la sua controlla)\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Menu.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Utente.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Utente.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"ControlloFinanze/master\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"fs0ciet1 &lt;erreg97@gmail.com&gt;\" />\r\n        <option value=\"virus4all &lt;laurentiustoenescu94@gmail.com&gt;\" />\r\n        <option value=\"virus\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--follow-tags\" />\r\n        <option name=\"title\" value=\"Current Branch\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2R0pictbUP68XWhnrbtKVsXDG65\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Laurentiu/Desktop/provaBacheca&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"eeef6f22-1d11-45f2-b00d-9be0cbd50e56\" name=\"Changes\" comment=\"\" />\r\n      <created>1686396982992</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1686396982992</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Creazione progetto ControlloFinanzze\">\r\n      <created>1686397131922</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686397131922</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Creazione progetto ControlloFinanzze\">\r\n      <created>1686397140615</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686397140615</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"unione della classe utente con la classe menu per la funzione di login dell' utente e creazione arraylist di Utenti come attributo inizializzandolo nel costruttore\">\r\n      <created>1686412854790</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686412854790</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"unione della classe utente con la classe menu per la funzione di login dell' utente e creazione arraylist di Utenti come attributo inizializzandolo nel costruttore\">\r\n      <created>1686412939168</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686412939168</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"modifica del controllo Upper and Lower Case con funzione .equalsIgnoreCase()\">\r\n      <created>1686413417474</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686413417474</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"modifica del controllo Upper and Lower Case con funzione .equalsIgnoreCase()\">\r\n      <created>1686413481079</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686413481079</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"chiamata della funzione registrazione di lau\">\r\n      <created>1688836809660</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688836809660</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"creazione funzione stampaSaldo per stampare il saldo di un utente, collegata alla funzione mostraSaldo di lau (la mia serve solo per richiamare, la sua controlla)\">\r\n      <created>1688839966715</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688839966715</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"user\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"virus4all &lt;laurentiustoenescu94@gmail.com&gt;\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"master\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"User\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"virus4all &lt;laurentiustoenescu94@gmail.com&gt;\" />\r\n                </option>\r\n              </RecentGroup>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"*\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Creazione progetto ControlloFinanzze\" />\r\n    <MESSAGE value=\"creazioni variabili nel main\" />\r\n    <MESSAGE value=\"creazione classe utente con funzione login e creazione  classe movimento\" />\r\n    <MESSAGE value=\"creazione classe utente con funzione login e creazione classe movimento\" />\r\n    <MESSAGE value=\"creazione della classe menu con le seguenti funzioni:&#10;-loginRegistrazione&#10;-mostraSaldo&#10;-stampaMenu\" />\r\n    <MESSAGE value=\"unione della classe utente con la classe menu per la funzione di login dell' utente e creazione arraylist di Utenti come attributo inizializzandolo nel costruttore\" />\r\n    <MESSAGE value=\"modifica del controllo Upper and Lower Case con funzione .equalsIgnoreCase()\" />\r\n    <MESSAGE value=\"chiamata della funzione registrazione di lau\" />\r\n    <MESSAGE value=\"creazione funzione stampaSaldo per stampare il saldo di un utente, collegata alla funzione mostraSaldo di lau (la mia serve solo per richiamare, la sua controlla)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"creazione funzione stampaSaldo per stampare il saldo di un utente, collegata alla funzione mostraSaldo di lau (la mia serve solo per richiamare, la sua controlla)\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0a80c248d2c8f6f2961d6e80e69279b174cb9a9c)
+++ b/.idea/workspace.xml	(date 1696069632355)
@@ -50,13 +50,13 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Laurentiu/Desktop/provaBacheca&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "last_opened_file_path": "C:/Users/Giulia/Documents/ControlloFinanze"
   }
-}</component>
+}]]></component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
